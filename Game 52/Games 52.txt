#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>

int main() {
	int i, j, k1, k2, k3, k4, f1, f2, f3, f4;
	int cou[37] = {0};
	int couless[37] = {0};
	int prime[37][1000] = {0};
	int primeless[37][1000] = {0};
	int u, t, p, q, k;
	//Вводим четыре списка и переменные. Списки: cou для учёта количества простых чисел с данной суммой цифр (от 1 до 36) и prime - для учёта самих чисел с данной суммой цифр. Другие два списка считают простые числа без чётных цифр. 
	
	i = 2;
	while (i < 10000) { 
		j = sqrt(i);
		k = 2;
		p = 0;
		while (k <= j) {
			if (i % k == 0) {
				p = 1;
			}
			k = k + 1;
		}
		// Это мы проверяем числа на простоту. 
		if (p == 0) {
			p = (i % 10) + ((i/10) % 10) + ((i/100) % 10) + ((i/1000) % 10);
			//Если простое, считаем сумму цифр. 
			cou[p] = cou[p] + 1;
			prime[p][cou[p]] = i;
			if (((i % 2) != 0) && ((i % 5) != 0) && (((i/10) % 2) != 0) && (((i/10) % 5) != 0) && (((i/100) % 2) != 0) && (((i/100) % 5) != 0) && (((i/1000) % 2) != 0) && (((i/1000) % 5) != 0)) {
				couless[p] = couless[p] + 1;
				primeless[p][couless[p]] = i;
			}
			//И проверяем на наличие чётных цифр и 5 для второго списка простых чисел. 
		}
		i = i + 1;
	}
	
	for (i = 2; i < 37; i++) {
		for (k1 = 1; k1 <= cou[i]; k1++) {
			for (k2 = 1; k2 <= cou[i]; k2++) {
				for (k3 = 1; k3 <= cou[i]; k3++) {
					for (k4 = 1; k4 <= cou[i]; k4++) {
					// Берём четыре числа, которые выпишем в табличку слева направо (по вертикали). 
						f1 = ((prime[i][k1]/1000) % 10) * 1000 + ((prime[i][k2]/1000) % 10) * 100 + ((prime[i][k3]/1000) % 10) * 10 + ((prime[i][k4]/1000) % 10);
						f2 = ((prime[i][k1]/100) % 10) * 1000 + ((prime[i][k2]/100) % 10) * 100 + ((prime[i][k3]/100) % 10) * 10 + ((prime[i][k4]/100) % 10);
						f3 = ((prime[i][k1]/10) % 10) * 1000 + ((prime[i][k2]/10) % 10) * 100 + ((prime[i][k3]/10) % 10) * 10 + ((prime[i][k4]/10) % 10);
						f4 = (prime[i][k1] % 10) * 1000 + (prime[i][k2] % 10) * 100 + (prime[i][k3] % 10) * 10 + (prime[i][k4] % 10);
						// А вот эти числа f 1-4 получились у нас по горизонтали. 
						q = 0;
						for(u = 1; u <= cou[i]; u++) {
							if (prime[i][u] == f1)
								q = q + 1;
							if (prime[i][u] == f2)
								q = q + 1;
							if (prime[i][u] == f3)
								q = q + 1;
							if (prime[i][u] == f4)
								q = q + 1;
							//Проверяем, что они тоже лежат в списке простых чисел с данной суммой цифр. Для каждого может быть не более одного вхождения, потому если общая сумма вхождений равна 4, то это как раз и было нужно. 
						}
						if (q == 4) {
							printf("%i\n", prime[i][k1]);
							printf("%i\n", prime[i][k2]);
							printf("%i\n", prime[i][k3]);
							printf("%i\n", prime[i][k4]);
							printf("\n");
							// Если все да - печатаем.
						}
					}
				}
			}
		}
		printf("aaa%i\n\n", i);
		// Просто счётчик числа действий, а то алгоритм долгий... 
	}
	scanf("%i", i);
}